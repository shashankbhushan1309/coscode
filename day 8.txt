Given a string s, find the first character that does not repeat and return it. If no non-repeating character exists, return '_'.

Example:
Input: s = "swiss"
Output: 'w'
Explanation: 's' repeats, 'w' is the first non-repeating character.



solution-
#include <iostream>
#include <unordered_map>
#include <string>
using namespace std;

char firstNonRepeatingChar(const string &s) {
    unordered_map<char, int> freq;

    // Count frequency of each character
    for (char c : s) {
        freq[c]++;
    }

    // Find the first character with frequency 1
    for (char c : s) {
        if (freq[c] == 1) {
            return c;
        }
    }

    return '_'; // return '_' if no non-repeating char exists
}

int main() {
    string s;
    cout << "Enter a string: ";
    cin >> s;

    char result = firstNonRepeatingChar(s);

    if (result == '_') {
        cout << "No non-repeating character found." << endl;
    } else {
        cout << "First non-repeating character: " << result << endl;
    }

    return 0;
}
