Given an array of integers and a number k, find the maximum sum of a subarray of size k


#include <iostream>
#include <vector>
using namespace std;

int maxSumSubarray(vector<int>& arr, int k) {
    int n = arr.size();
    if (n < k) return -1;

    // Compute sum of first window
    int max_sum = 0;
    for (int i = 0; i < k; i++) {
        max_sum += arr[i];
    }

    int window_sum = max_sum;

    // Slide the window from left to right
    for (int i = k; i < n; i++) {
        window_sum += arr[i] - arr[i - k];
        max_sum = max(max_sum, window_sum);
    }

    return max_sum;
}

int main() {
    vector<int> arr = {100, 200, 300, 400};
    int k = 2;
    cout << "Maximum sum of subarray of size " << k << " is " << maxSumSubarray(arr, k) << endl;
    return 0;
}
